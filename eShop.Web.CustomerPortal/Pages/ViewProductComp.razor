@page "/product/{productId:int}"
@*image, brand, name, price, addProductToCart(), BackToProducts()*@

@inject IViewProductUseCase viewProductUseCase
@inject IAddProductUseCase addProductUseCase

<h4>Product Details</h4>
<br />

@if (product is not null)
{
    <div class="card" style="width: 30rem;">
        <img src="@product.ImageLink" class="card-img-top w-50">
        <div class="card-body">
            <h5 class="card-title">@product.Name</h5>
            <p class="text-muted">@product.Brand</p>
            <hr />
            <p>Price: &nbsp; <span class="text-danger">@product.Price.ToString("c")</span></p>
            <p class="car-text">@product.Description</p>
        </div>
        <a href="/" class="btn btn-primary" @onclick="AddProductToShoppingCart">Add To Cart</a>
    </div>
    <br />
    <a href="/" class="btn btn-outline-secondary">Back To Products</a>
}
else
{
    <p>Loading...</p>
}

@code{
    private Product product;

    [Parameter]
    public int productId { get; set; }

    protected override void OnInitialized()
    {
        if (productId > 0)
            product = viewProductUseCase.Execute(productId);
    }

    public async Task AddProductToShoppingCart()
    {
        await addProductUseCase.ExecuteAsync(product);
    }
}